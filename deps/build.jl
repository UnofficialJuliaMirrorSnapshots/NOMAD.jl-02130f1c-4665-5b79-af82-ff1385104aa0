using BinaryProvider # requires BinaryProvider 0.3.0 or later

builddir = @__DIR__

nomad_path = joinpath(builddir,"nomad.3.9.1")

if ispath(nomad_path)
	error("NOMAD.jl building error : nomad folder already exists, first remove it before building anew")
end

if Sys.isapple() #We will have NOMAD compiled on your machine

	try
		zipnomad = joinpath(builddir,"downloads/NOMAD.zip")
		run(`unzip $zipnomad -d $builddir`)
		ENV["NOMAD_HOME"] = nomad_path
		cd(nomad_path)
		run(`./configure`)
		run(`make`)
	catch e
		rm(nomad_path;recursive=true, force=true)
		@warn "NOMAD could not be compiled automatically, try ./configure and make extracted files from NOMAD.jl/deps/downloads/NOMAD.zip"
		throw(e)
	end

elseif Sys.islinux() #We have a pre-compiled version available for you, let's get it !

	# Parse some basic command-line arguments
	const verbose = "--verbose" in ARGS
	const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))

	# Download binaries from hosted location
	bin_prefix = "https://github.com/ppascal97/NOMADBuilder.jl/releases/download/1.0.7"

	# Listing of files generated by BinaryBuilder:
	download_info = Dict(
	    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/NOMAD.v1.0.0.aarch64-linux-gnu.tar.gz", "211bf190927dc4047c59af27f9b4f641b328c5717e0dea3e55c81025864e27ec"),
	    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/NOMAD.v1.0.0.arm-linux-gnueabihf.tar.gz", "76331d5fac0668b65958876f1c7936ced7a507ab123579ac047ff7c10d7cbb02"),
	    Linux(:i686, libc=:glibc) => ("$bin_prefix/NOMAD.v1.0.0.i686-linux-gnu.tar.gz", "51c74caf3d400386fb107a82c6f4f4cd09eaf298c4edf22dde6f8a1f1d0d23fe"),
	    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/NOMAD.v1.0.0.powerpc64le-linux-gnu.tar.gz", "fa1b8c5483175d63eb38f3105be1fde6d00b374c152dfc307905b2d2709cace4"),
	    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/NOMAD.v1.0.0.x86_64-linux-gnu.tar.gz", "2fd2110d0683fdf60ffc48ddddb6ce2643c94dc390131c807cc451ab53b49334"),
	)

	dl_info = choose_download(download_info, platform_key_abi())
	if dl_info === nothing
	    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
	end

	if !isinstalled(dl_info...; prefix=prefix)
	    # Download and install binaries
	    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
	end

	mv(joinpath(builddir,"usr","nomad.3.9.1"),nomad_path)
	rm(joinpath(builddir,"usr");force=true,recursive=true)

elseif Sys.iswindows()

	error("NOMAD.jl error : The package is not compatible with Windows operating systems")

end
